read cheyyali after executing the sp.



USE [CTSDEV]

GO


/***** Object:  StoredProcedure [dbo].[SP_InsertUpdateReferralInfo]    Script Date: 04-12-2017 21:51:40 *****/

SET ANSI_NULLS ON

GO


SET QUOTED_IDENTIFIER ON

GO


ALTER PROCEDURE [dbo].[SP_InsertUpdateReferralInfo]

(           @cc_number int

           ,@referred_to_group varchar(20)

           ,@referral_status varchar(20)

           ,@referral_accpt_by int

           ,@last_update_by int

           ,@referred_to_unit varchar(20)

           ,@referal_date date

     ,@referral_id int out

)

AS

BEGIN

SET NOCOUNT ON;

    IF exists(select 1 from [ReferralInfo] where [cc_number]=@cc_number)

        BEGIN

        update [ReferralInfo] 

        set 

            [referred_to_group]=@referred_to_group,

            [referral_status]=@referral_status,

            [referral_accpt_by] = @referral_accpt_by,

            [last_update_by]=@last_update_by,

            [referred_to_unit] = @referred_to_unit,

            [referal_date]=@referal_date

            where [cc_number]=@cc_number

  select @referral_id = referral_id from [ReferralInfo] where [cc_number]=@cc_number

        END

    ELSE

        BEGIN

INSERT INTO [dbo].[ReferralInfo]

               (

               [cc_number]

               ,[referred_to_group]

               ,[referral_status]

               ,[referral_accpt_by]

               ,[last_update_by]

               ,[referred_to_unit]

               ,[referal_date]

               )

         VALUES

               (

               @cc_number

              ,@referred_to_group

              ,@referral_status

              ,@referral_accpt_by

              ,@last_update_by

              ,@referred_to_unit

              ,@referal_date

                )

   @referral_id = @@IDENTITY

                END

END




GO
///////////////////////////////////////////////////////////////////////////////////////
USE [CTSDEV]
GO
/***** Object:  StoredProcedure [dbo].[SP_ReferralHistroyofTicket]    Script Date: 04-12-2017 23:00:53 *****/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[SP_ReferralHistroyofTicket] (@CCno Int)
AS
BEGIN
SELECT ReferralInfo.*, ReferralText.referrer_comments_text,ReferralText.referee_comments_text,ReferralText.referrer_comments,ReferralText.referee_comments
FROM ReferralInfo
LEFT JOIN ReferralText ON ReferralInfo.referral_id=ReferralText.referral_id 
  WHERE ReferralInfo.cc_number = @CCno and ReferralText.cc_number = @CCno
END


exec [SP_ReferralHistroyofTicket] 1003
///////////////////////////////////////////////////////////////////////////////////////////
   public ActionResult ViewReferralHistory(TrackingViewModel trackrefferalhistrory)
        {
            //TabName.Value = Request.Form[TabName.UniqueID];
            FillDropdowns();
            int ccno = Convert.ToInt32(Session["ccnum"]);
            List<ReferralInfo> referralhistrory = new List<ReferralInfo>();
            referralhistrory = _tackingBO.getrefferalHistroy(ccno);
            if (referralhistrory.Count > 0)
            {
                foreach (var refree in referralhistrory)
                {
                    if (refree.comments != null)
                        refree.comments = Regex.Replace(refree.comments, "<.*?>", String.Empty);
                    //  HtmlString test = new HtmlString(refree.comments);
                    // refree.comments = test.ToHtmlString();
                    // test = refree.comments;
                    //refree.comments = "<b>" + refree.comments + "</b>";
                    if (refree.referral_rejected_comments != null)
                        refree.referral_rejected_comments = Regex.Replace(refree.referral_rejected_comments, "<.*?>", String.Empty);
                }
            }
            trackrefferalhistrory.referralhistroy = referralhistrory;
            return View("TrackingInfo", trackrefferalhistrory);
        }
