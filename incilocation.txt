//////////////new model incidentlocation/////////
namespace UserIssues.Models
{
   public class IncidentLocation
    {
       public int boro { get; set; }
    }
}
//////////////new model incidentlocation/////////
///////////////////program type change event//////////
$('#corrcmpcontactInfo_dfta_id').on('change', function () {
        debugger;
        var programtype = $("#corrcmpcontactInfo_dfta_id").val();
        alert(programtype);
        var url = "/Tracking/FillDetails?value=" + programtype;
        $.ajax({
            type: 'GET',
            url: url,
            datatype: 'application/json',
            contentType: 'application/json',
            data: JSON.stringify({ programtype: +programtype }),
            success: function (result) {
                debugger;
                alert('sucess');
                alert(result.boro);
                $("#inclocationinfo_inc_loc_type").val(result.boro);
                
            },
            error: function () {
                alert("Whooaaa! Something went wrong..")
            },
        });
        //  alert(this.value);

    })
///////////////////program type change event//////////
//////////////fill details method in controller////////////
 public JsonResult FillDetails(string value)
         {
             try
             {
                 IncidentLocation location = new IncidentLocation();
                 location = _tackingBO.GetIncidentLocation(value);
                 return Json(location, JsonRequestBehavior.AllowGet);

             }
             catch (Exception ee)
             {
                 Console.WriteLine(ee.Message);

                 //WriteLog("Exception in Saving Canvas " + txtLocation + " " + ee.Message);
             }

             return null;
 
         }
//////////////fill details method in controller////////////
///////////////////trackingbo layer//////////////////
 public IncidentLocation GetIncidentLocation(string programtype)
        {
            try
            {
                var result = _unitOfWork.Repository<IncidentLocation>().ExecuteProcedureForList("SP_GetIncidentLocation @dfta_id",
                               new SqlParameter("@dfta_id ", SqlDbType.VarChar) { Value = programtype }).ToList();
                return result[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
 
        }
///////////////////trackingbo layer//////////////////
/////////////////interface bo//////////////////////
IncidentLocation GetIncidentLocation(string programtype);
/////////////////interface bo//////////////////////
/////////////////dropdown in details partial view////////
@Html.DropDownListFor(m => m.inclocationinfo.inc_loc_type, new SelectList((IEnumerable<CTSCodeTable>)ViewData["IncidentLocation"], "table_code", "short_description"),"---Select One--", new { @class = "form-control" })
/////////////////dropdown in details partial view////////