using System;
using System.Collections.Generic;
using System.DirectoryServices.AccountManagement;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CTSImp1.Models;
using CTSImp1.Facade;
using CTSImp1.ViewModels;

namespace CTSImp1.Controllers
{
    public class LoginController : BaseController
    {

        // GET: /Tracking/
        #region "Unitofwork Reference"

        ITrackingBO _tackingBO = null;

        public LoginController(ITrackingBO tackingBO)
        {
            this._tackingBO = tackingBO;
        }
        public LoginController()
        {
            _tackingBO = new TrackingBO();
        }
        #endregion

        //
        // GET: /Login/
        [AllowAnonymous]
        public ActionResult Login()
        {
            ViewData["LoggedIn"] = null;
            HttpContext.Session["IsAuthenticated"] = false;
            HttpContext.Session.Remove("UserProfile");
            return View();
        }

        [HttpPost]
        [AllowAnonymous]
        [ValidateAntiForgeryToken]
        public ActionResult Login(Login userDetails)
        {
            try
            {
                string currentUser = User.Identity.Name;
                //PrincipalContext context = new PrincipalContext(ContextType.Domain, "RAM-PC");
                //if (context.ValidateCredentials(userDetails.UserName, userDetails.Password))
                //{
                    HttpContext.Session["IsAuthenticated"] = true;
                HttpContext.Session["UserProfile"] = GetUserDetails(userDetails.UserName);
                return RedirectToAction("DisplayDataSearch", "Tracking");
                //}
                //else
                //{
                //    ViewData["LoggedIn"] = "WrongCredentials";
                //    ViewBag.ErrorMessage = "UserName or Password is wrong";
                //    return View("Login");
                //}
            }

            catch (Exception ex)
            {
                return View("Login"); ;
            }

        }

        [NonAction]
        public UserInfo GetUserDetails(string currentUser)
        {
            UserInfo userinfo = new UserInfo();
            List<UserInfo> userDetails = new List<UserInfo>();
            userDetails = _tackingBO.GetAllUserDetails(currentUser);
            userinfo = userDetails[0];
            return userinfo;
        }

    }
}