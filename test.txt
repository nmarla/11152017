////////////////tarcking view controller//////////////   
public ActionResult SaveAttachmentsInfo(TrackingViewModel trackattachment, HttpPostedFileBase files)
         {
             FillDropdowns();
             try
             {
                 if (Request.Files != null && Request.Files.Count > 0)
                 {
                     HttpPostedFileBase file = Request.Files[0];
                     if (file != null && file.ContentLength > 0)
                     {
                         string _FileName = Path.GetFileName(file.FileName);
                         string _path = Server.MapPath("~/Uploads/");
                         if (!Directory.Exists(_path))
                         {
                             Directory.CreateDirectory(_path);
                         }
                         _path = Path.Combine(_path, _FileName);
                         file.SaveAs(_path);
                         trackattachment.documentsInfom.file_name = _FileName;
                         trackattachment.documentsInfom.file_ext = Path.GetExtension(file.FileName);
                         trackattachment.documentsInfom.file_location = _path;
                         int UserId = 1;
                         _tackingBO.InsertUpdateDocumentsInfo(trackattachment, trackattachment.corrcmpInfo.cc_number, UserId);
                          trackattachment.documentshistroy = _tackingBO.GetdocumentsHistroy(trackattachment.corrcmpInfo.cc_number);
                         return View("TrackingInfo", trackattachment);
                     }
                     else
                     {
                         return View("TrackingInfo");
                     }
                 }
                 else
                 {
                     return View("TrackingInfo");
                 }
               
             }
             catch (Exception ex)
             {
                 return View("Tracking");
             }
         } 
public ActionResult ViewAttachment(string fileName)
         {
             try
             {
                 var fs = System.IO.File.OpenRead(Server.MapPath("~/Uploads/" + fileName));
                 return File(fs, "application/jpg", fileName);
             }
             catch
             {
                 throw new HttpException(404, "Couldn't find " + fileName);
             }


         }
         public ActionResult Deleteattachment(string fileName)
         {
             try
             {
                 var fs = System.IO.File.OpenRead(Server.MapPath("~/Uploads/" + fileName));
                 return File(fs, "application/jpg", fileName);
             }
             catch
             {
                 throw new HttpException(404, "Couldn't find " + fileName);
             }


         }
////////////////tarcking view controller//////////////
///////////////////trackinginfo.cshtml//////////
<div class="well">
                                <div class="row">
                                    <div class="col-md-12">
                                        <table class="table table-condensed table-hover">
                                            <tr>
                                                <th style="border-top: 0px solid #136073;">Date</th>
                                                <th style="border-top: 0px solid #136073;">File Name</th>
                                                <th style="border-top: 0px solid #136073;">Upload by</th>
                                                <th style="border-top: 0px solid #136073;">Delete</th>
                                                <th>test</th>
                                            </tr>
                                             @if (Model.documentshistroy != null)
                                              {
                                                foreach (var category in Model.documentshistroy)
                                                 {
                                                      <tr>
                                                         
                                                         <td>@category.tstamp</td>
                                                         <td><a href = @Url.Action("ViewAttachment", new { fileName = category.file_name }) > @category.file_name </a></td>
                                                          <td>@category.last_updated_by</td>
                                                          <td><a href = @Url.Action("Deleteattachment", new { fileName = category.file_name }) >Delete </a></td>
                                                     </tr>
                                                 }
                                              }
                                           
                                        </table>
                                    </div>
                                </div>
                            </div>
///////////////////trackinginfo.cshtml//////////
////////tracking bo////////////////
 public List<DocumentsInfo> GetdocumentsHistroy(int ccno)
        {
            try
            {
                var result = _unitOfWork.Repository<DocumentsInfo>().ExecuteProcedureForList("SP_documentHistroyofTicket @CCno ",
                         new SqlParameter("@CCno ", SqlDbType.Int) { Value = ccno }).ToList();
                return result;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
////////tracking bo////////////////
//////////////////proc//////////////
CREATE PROCEDURE [dbo].[SP_documentHistroyofTicket] (@CCno Int)
 
    As 
select * from DocumentsInfo where cc_number=@CCno

--exec [SP_Test] kokl

//////////////////proc//////////////
